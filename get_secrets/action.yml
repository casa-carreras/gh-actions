name: 'Get secrets'
description: 'Get secrets from bw'
inputs:
  bw-cli-path:
    description: 'Bw cli path'
    required: true
    default:  https://github.com/bitwarden/cli/releases/download/v1.22.1/bw-linux-1.22.1.zip
  bw-client-id:
    description: 'Bw client id'
    required: true
  bw-client-secret:
    description: 'Bw client secrets'
    required: true
  vault-url:
    description: 'Vault url'
    required: true
  vault-master-password:
    description: 'vault-master-password'
    required: true
  vault-folders:
    description: 'Folders with secrets in vault'
    required: true
    default: efd16240-169d-435a-960d-37a8f5128efa,c2e8f3c5-23e1-4903-952f-d2ab41d852ff,43a91d42-73a8-4b5a-bcfd-cdec2732cfed,37ae3b3b-f5c9-42c5-b2f0-27a9fff12ae8,f8e6c19b-0243-488d-839b-f55b4d0fa03c

runs:
  using: "composite"
  steps:
    - name: Install bw cli
      shell: bash
      run: |
        wget -O bw-cli.zip ${{ inputs.bw-cli-path }}
        unzip bw-cli.zip
        rm -rf bw-cli.zip
        chmod +x bw

        ./bw --version

    - name: bw login
      shell: bash
      env:
        BW_CLIENTID: ${{ inputs.bw-client-id }}
        BW_CLIENTSECRET: ${{ inputs.bw-client-secret }}
      run: |
        ./bw config server ${{inputs.vault-url}}
        ./bw login --apikey

    - name: Get secrets
      shell: bash
      env:
        BW_PASSWORD: ${{ inputs.vault-master-password }}
        VAULT-FOLDERS: ${{ inputs.vault-folders }}
      run: |
        # Doker-Secrets
        export BW_SESSION=$(./bw unlock --passwordenv BW_PASSWORD --raw)

        IFS=',' read -ra ADDR <<< "${{env.VAULT-FOLDERS}}"
        for i in "${ADDR[@]}"; do
          echo "# process folder: $i"
          ./bw list items --folderid $i | jq -r  > $i.json
        done

        ./bw logout
        ls -la

    - name: Generate secrets
      shell: python
      run: |
        import json
        import os
        import base64

        folders_name_str = "${{ inputs.vault-folders }}"
        folders_name= folders_name_str.split(',')
        print(folders_name)

        result = list()
        for folder in folders_name:

            file_name = f"{folder}.json"
            with open(file_name,'r') as f:
              content_file = json.load(f)
              content_file = [
                  {"name": str(item["name"]).lower(), "password": item["login"]["password"]}
                  for item in content_file
              ]

              content_file_filtered = [
                  item for item in content_file if not str(item["name"]).endswith("_b64")
              ]

              content_file_process_b64 = [
                  {
                      "name": str(item["name"]).rstrip("_b64"),
                      "password": base64.b64decode(item["password"]).decode(),
                  }
                  for item in content_file
                  if str(item["name"]).endswith("_b64")
              ]
              if content_file_filtered:
                result.extend(content_file_filtered)
              if content_file_process_b64:
                result.extend(content_file_process_b64)
            os.remove(file_name)
        
        

        for item in result:
          print(f"# Writting {item['name']}.txt")
          with open(f"{item['name']}.txt", "w") as f:
            f.write(f"{item['password']}")


    - name: Set secrets to GH
      id: set-secrets
      shell: bash
      run: |
        for i in *.txt; do
            [ -f "$i" ] || break
            gh secret set ${i%.txt} < $i
        done

    - name: ls files
      shell: bash
      run: |
        ls -la

    - name: Check if secrets got
      shell: bash
      run: |
        count=$(ls -1 *.txt 2>/dev/null | wc -l)
        if [ $count != 0 ]; then 
          echo "txt files does exist."
        else
          echo "txt files does not exist."
          exit 1
        fi 
